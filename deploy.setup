#!/bin/bash

#############################################################################
#
#   initialization for deploy
#
#############################################################################

[ "${CONFIG_DIR:-}" ] || CONFIG_DIR="$(pwd)" 
[ "${WORKSPACE_DIR:-}" ] || WORKSPACE_DIR="$(pwd)/workspace.$(basename "$CONFIG_DIR")" 

#----------------------------------------------------------------------------
function exposeDockerRestAPI() {
    local target=/lib/systemd/system/docker.service
    [ "$(grep -sc 'tcp://0.0.0.0:4243' "$target")" -gt 0 ] && return 0 

    echo -e '\e[91mExposing docker REST API\e[0m' >&2
    echo -e '\e[33msed -iE '"'"'s|^(ExecStart=/usr/bin/dockerd -H fd://)(.*)$|\1 -H tcp://0.0.0.0:4243\2|'"' $target"'\e[0m' >&2
    sudo sed -i -E 's|^(ExecStart=/usr/bin/dockerd -H fd://)(.*)$|\1 -H tcp://0.0.0.0:4243\2|' "$target"
    sudo -s systemctl daemon-reload
    sudo -s  systemctl restart docker
}

#---------------------------------------------------------------------------- 

declare -r config_dir="${CONFIG_DIR:?}"
declare -r workspace_dir="${WORKSPACE_DIR:?}"
declare -r MOUNTPOINT=/opt

if [ "${1:-}" ]; then

    # copy certs to ${MOUNTPOINT} which is the custom volume
    echo "copying certs to docker volume : $1" >&2
    rm -rf "$MOUNTPOINT"/*
    cd /etc/ssl ||:
    while read -r file; do
        [ -d "$(dirname "${MOUNTPOINT}/$file")" ] || mkdir -p "$(dirname "${MOUNTPOINT}/$file")"
        cp "$(readlink -f "$file")" "${MOUNTPOINT}/$file"
    done < <(find . ! -type d | awk '{print substr($1,3)}')

    exit 0
fi


declare isIinitialized="$(basename "${BASH_SOURCE[0]}")"
isIinitialized="${workspace_dir}/.${isIinitialized%.*}.init"
if [ ! -f "$isIinitialized" ]; then

    # perform initialization 
    mkdir -p "$workspace_dir" ||:

    exposeDockerRestAPI
    
    touch "$isIinitialized"
fi

# ensure we have a volume containing certs
declare volname="$(basename "${workspace_dir//.}")_alpinecerts"
if [ "$(docker volume inspect "$volname" 2>/dev/null | jq 'length')" -eq 0 ];then
    docker run --rm -t \
               --volume "${config_dir}:/tmp"  \
               --volume "${volname}:$MOUNTPOINT"  \
               "${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}${CONTAINER_OS:-alpine}/base_container:${CONTAINER_TAG:-latest}" \
               "/tmp/$(basename "${BASH_SOURCE[0]}")" "$volname"
fi

exit 0
